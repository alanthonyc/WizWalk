set PC, main

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:loadtiles 
; Parameters:
; A = Data to Read
; B = Length
; C = Destination

; Local:
; I = Iterator
set i, 0

:loadtiles_loop
SET [c], [a]
ADD a, 1
ADD i, 1
ADD c, 1
IFE i, b
    SET PC, loadtiles_end
SET PC, loadtiles_loop

:loadtiles_end
SET PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;=================================================
;===| Draw Near Wall Border

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawWindowTop
set x, 0x8000
set [x], 0x2000
set i, 0

:drawWindowTop_loop
add x, 1
add i, 1
set [x], 0x2001
ifg 0x001f, i
	set PC, drawWindowTop_loop

set [x], 0x2002

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawWindowBottom
set x, 0x8160
set [x], 0x2003
set i, 0

:drawWindowBottom_loop
add x, 1
add i, 1
set [x], 0x2004
ifg 0x001f, i
	set PC, drawWindowBottom_loop

set [x], 0x2005

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawWindowLeft
set x, 0x8000
set i, 0

:drawWindowLeft_loop
add x, 0x0020
add i, 1
set [x], 0x2006
ifg 0x000a, i
	set PC, drawWindowLeft_loop

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawWindowRight
set x, 0x801f
set i, 0

:drawWindowRight_loop
add x, 0x0020
add i, 1
set [x], 0x2007
ifg 0x000a, i
	set PC, drawWindowRight_loop

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawMainWindow
jsr drawWindowTop
jsr drawWindowBottom
jsr drawWindowLeft
jsr drawWindowRight
set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;=================================================

;=================================================
;===| Draw Middle Wall Border

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawMiddleTop
set x, 0x8067
set [x], 0x2000

:drawMiddleTop_loop
add x, 1
set [x], 0x2001
ifg 0x8078, x
set PC, drawMiddleTop_loop

set [x], 0x2002

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawMiddleBottom
set x, 0x8127
set [x], 0x2003

:drawMiddleBottom_loop
add x, 1
set [x], 0x2004
ifg 0x8138, x
set PC, drawMiddleBottom_loop

set [x], 0x2005

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawMiddleLeft
set x, 0x8067
set i, 0

:drawMiddleLeft_loop
add x, 0x0020
add i, 1
set [x], 0x2006
ifg 5, i
set PC, drawMiddleLeft_loop

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawMiddleRight
set x, 0x8078
set i, 0

:drawMiddleRight_loop
add x, 0x0020
add i, 1
set [x], 0x2007
ifg 5, i
set PC, drawMiddleRight_loop

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawMiddle
jsr drawMiddleTop
jsr drawMiddleBottom
jsr drawMiddleLeft
jsr drawMiddleRight
set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /
;=================================================

;=================================================
;===| Draw Far Wall Border

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawFarTop
set x, 0x80ac
set [x], 0x2000

:drawFarTop_loop
add x, 1
set [x], 0x2001
ifg 0x80b3, x
set PC, drawFarTop_loop

set [x], 0x2002

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawFarBottom
set x, 0x80ec
set [x], 0x2003

:drawFarBottom_loop
add x, 1
set [x], 0x2004
ifg 0x80f3, x
set PC, drawFarBottom_loop

set [x], 0x2005

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawFarLeft
set x, 0x80ac
set i, 0

:drawFarLeft_loop
add x, 0x0020
add i, 1
set [x], 0x2006
ifg 1, i
set PC, drawFarLeft_loop

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawFarRight
set x, 0x80b3
set i, 0

:drawFarRight_loop
add x, 0x0020
add i, 1
set [x], 0x2007
ifg 1, i
set PC, drawFarRight_loop

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawFar
jsr drawFarTop
jsr drawFarBottom
jsr drawFarLeft
jsr drawFarRight
set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /
;=================================================



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:initStart

; load border tiles
set PUSH, a
set PUSH, b
set PUSH, c
set b, 0x0010
set c, 0x8180
set a, border0
jsr loadtiles
set c, POP
set b, POP
set a, POP

; draw intiial view
jsr drawMainWindow
jsr drawMiddle
jsr drawFar

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

:main
jsr initStart


:border0 DAT 0xff01, 0x0101 ; 0x8180 top left 
:border1 DAT 0x0101, 0x0101 ; 0x8181 top
:border2 DAT 0x0101, 0x01ff ; 0x8182 top right
:border3 DAT 0xff80, 0x8080 ; 0x8183 bottom left
:border4 DAT 0x8080, 0x8080 ; 0x8184 bottom
:border5 DAT 0x8080, 0x80ff ; 0x8185 bottom right
:border6 DAT 0xff00, 0x0000 ; 0x8186 left
:border7 DAT 0x0000, 0x00ff ; 0x8187 right

