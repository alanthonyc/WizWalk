set pc, main


;=================================================
;===| Draw Door Facing

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawDoorFacing

; top left of door
set x, 8
set y, 3
; Calculate location on screen
set push, z
jsr calculateCoordinateLocation
set x, z
set z, pop
set [x], 0x2000

set x, 0x0008
set y, 0x0003
set z, 0x000f
jsr drawHorizontalLine

; right of door
set x, 23
set y, 2
set z, 7
set a, 0x2006
jsr drawVerticalLine

; left of door
set x, 8
set y, 3
set z, 6
set a, 0x2006
jsr drawVerticalLine

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;=================================================


;=================================================
;===| Draw Door Right Far

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawDoorRightFar

; top left of door
set x, 23
set y, 4
; Calculate location on screen
set push, z
jsr calculateCoordinateLocation
set x, z
set z, pop
set [x], 0x2009

; top right of door
set x, 22
set y, 4
; Calculate location on screen
set push, z
jsr calculateCoordinateLocation
set x, z
set z, pop
set [x], 0x2008

; top right of door
set x, 22
set y, 4
set z, 3
set a, 0x2006
jsr drawVerticalLine

; top right of door
set x, 23
set y, 4
set z, 3
set a, 0x2007
jsr drawVerticalLine

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;=================================================



;=================================================
;===| Draw Near Wall Outline

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawMainWindow

set x, 0
set y, 0
set z, 0x001f
jsr drawSquareTop

set x, 0
set y, 0x000a
set z, 0x001f
jsr drawSquareBottom

set x, 0
set y, 0x0000
set z, 0x0009
jsr drawSquareLeft

set x, 0x001f
set y, 0x0000
set z, 0x0009
jsr drawSquareRight

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;=================================================

;=================================================
;===| Draw Middle Wall Outline

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawMiddle

set x, 0x0006
set y, 0x0003
set z, 0x0013
jsr drawSquareTop

set x, 0x0006
set y, 0x0008
set z, 0x0013
jsr drawSquareBottom

set x, 0x0006
set y, 0x0003
set z, 0x0004
jsr drawSquareLeft

set x, 0x0019
set y, 0x0003
set z, 0x0004
jsr drawSquareRight

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /
;=================================================

;=================================================
;===| Draw Far Wall Outline

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawFar

set x, 0x000b
set y, 0x0005
set z, 0x0009
jsr drawSquareTop

set x, 0x000b
set y, 0x0007
set z, 0x0009
jsr drawSquareBottom

set x, 0x000b
set y, 0x0005
set z, 0x0001
jsr drawSquareLeft

set x, 0x0034
set y, 0x0004
set z, 0x0001
jsr drawSquareRight

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /
;=================================================

;=================================================
;===| Draw a Solid Wall

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawSolidWall

set x, 0x0000
set y, 0x0003
set z, 0x001e
jsr drawHorizontalLine

set x, 0x0000
set y, 0x0008
set z, 0x001e
jsr drawHorizontalLine

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /
;=================================================

;=================================================
;===| Drawing Functions
;===============

;===| Clear Screen

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:clearScreen

; Calculate location on screen
set x, 0x8000

:clearNextCoordinate
set [x], 0x0000
add x, 1
ifg 0x817f, x
	set pc, clearNextCoordinate

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /


;===| Draw Lines

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawHorizontalLine
;Input:
; x - X coordinate of line origin
; y - Y coordinate of line origin
; z - length of line

; Calculate location on screen
set push, z
jsr calculateCoordinateLocation
set x, z
set z, pop

set i, 0

:drawHorizontalLine_loop
add x, 1
add i, 1
set [x], 0x2001
ifg z, i
	set PC, drawHorizontalLine_loop

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawVerticalLine
;Input:
; x - X coordinate of line origin
; y - Y coordinate of line origin
; z - length of line
; a - character to draw

; Calculate location on screen
set push, z
jsr calculateCoordinateLocation
set x, z
set z, pop

set i, 0

:drawVerticalLine_loop
add x, 0x0020
add i, 1
set [x], a
ifg z, i
	set PC, drawVerticalLine_loop

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;===| Draw Squares

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawSquareTop
;Input:
; x - X coordinate of line origin
; y - Y coordinate of line origin
; z - length of line

; Calculate location on screen
set push, z
jsr calculateCoordinateLocation
set x, z
set z, pop

set [x], 0x2000
set i, 0

:drawSquareTop_loop
add x, 1
add i, 1
set [x], 0x2001
ifg z, i
	set PC, drawSquareTop_loop

set [x], 0x2002

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawSquareBottom
;Input:
; x - X coordinate of line origin
; y - Y coordinate of line origin
; z - length of line

; Calculate location on screen
set push, z
jsr calculateCoordinateLocation
set x, z
set z, pop

set [x], 0x2003
set i, 0

:drawSquareBottom_loop
add x, 1
add i, 1
set [x], 0x2004
ifg z, i
	set PC, drawSquareBottom_loop

set [x], 0x2005

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawSquareLeft
;Input:
; x - X coordinate of line origin
; y - Y coordinate of line origin
; z - length of line

; Calculate location on screen
set push, z
jsr calculateCoordinateLocation
set x, z
set z, pop

set i, 0

:drawSquareLeft_loop
add x, 0x0020
add i, 1
set [x], 0x2006
ifg z, i
	set PC, drawSquareLeft_loop

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:drawSquareRight
;Input:
; x - X coordinate of line origin
; y - Y coordinate of line origin
; z - length of line

; Calculate location on screen
set push, z
jsr calculateCoordinateLocation
set x, z
set z, pop

set i, 0

:drawSquareRight_loop
add x, 0x0020
add i, 1
set [x], 0x2007
ifg z, i
	set PC, drawSquareRight_loop

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /
;=================================================
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:initStart

; load border tiles
set PUSH, a
set PUSH, b
set PUSH, c
set b, 0x0014
set c, 0x8180
set a, border0
jsr loadtiles
set c, POP
set b, POP
set a, POP

set PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /
;=================================================

;=================================================
;===| Utilities
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:loadtiles 
; Parameters:
; A = Data to Read
; B = Length
; C = Destination

; Local:
; I = Iterator
set i, 0

:loadtiles_loop
SET [c], [a]
ADD a, 1
ADD i, 1
ADD c, 1
IFE i, b
    SET PC, loadtiles_end
SET PC, loadtiles_loop

:loadtiles_end
SET PC, POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; \
:calculateCoordinateLocation
; Input: X, Y Cartesian Coordinates
; Output: Z for binary location

set push, a

set z, 0x8000
set a, 0x0020
mul a, y
add z, a
add z, x

set a, pop

set pc, pop
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; /

;=================================================

;=================================================
;===| Data

;===| Border Tiles
:border0 DAT 0xff01, 0x0101 ; 0x8180 top left  
:border1 DAT 0x0101, 0x0101 ; 0x8181 top
:border2 DAT 0x0101, 0x01ff ; 0x8182 top right
:border3 DAT 0xff80, 0x8080 ; 0x8183 bottom left
:border4 DAT 0x8080, 0x8080 ; 0x8184 bottom
:border5 DAT 0x8080, 0x80ff ; 0x8185 bottom right
:border6 DAT 0xff00, 0x0000 ; 0x8186 left
:border7 DAT 0x0000, 0x00ff ; 0x8187 right

;===| Door Tiles
:doorRight0 DAT 0x8040, 0x2010 ; 0x8188 top left
:doorRight1 DAT 0x0804, 0x02ff ; 0x8189 top right

;=================================================


;=================================================
;===| Main loop
:main
jsr initStart

; draw intial view
jsr drawMainWindow
jsr drawMiddle
jsr drawFar
jsr drawDoorRightFar

set j, 0
set b, 0

:inputLoop
ife [0x9000+b], 0
	set pc, inputLoop

set [0x9000+b], 0
jsr clearScreen
add b, 1
ife b, 16
	set b, 0

ifn j, 0
	set pc, faceTunnel
    
:faceSolidWall
set j, 1
jsr drawMainWindow
;jsr drawSolidWall
jsr drawDoorFacing
set pc, inputLoop

:faceTunnel
set j, 0
jsr drawMainWindow
jsr drawMiddle
jsr drawFar
jsr drawDoorRightFar
set pc, inputLoop


; inifite loop at the end, otherwise, it falls through to some weird code and mucks up my screen
:end
set pc, end
;=================================================

